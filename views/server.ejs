<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Socket Server</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
    <link rel="stylesheet" href="./../style.css">   
</head>

<body onload="startTime()">
    
  <div class="contenedor">

    <div id="top"><img src="./../lineatop.png" alt=""></div>

    <header>
        
  <div class="logo ">
    <img src="./../logo.png" alt="">
  </div>

  <nav>
            <span id="reloj"></span>
    
  </nav>

</header>

<section class="main" id="main">
  
  <div id="normal" class="normal-state" style="color:#FFF;padding-top:50px"><span id="connect"><center>CONECTANDO .............</center></span></div>

</section>

<aside id="state_totems">
  

 
  
</aside>

<footer>
  <section class="links">
    <a href="#">TOTEM 1</a>
    <a href="#">TOTEM 2</a>
    <a href="#">TOTEM 3</a>
    <a href="#">TOTEM 4</a>
  </section>

  
</footer>
    <!-- <audio src="sirena.mp3" autoplay></audio> -->
</div>
   

    <script src="../socket.io/socket.io.js"></script>

    <script>
        var socket = io();
        const main_div = document.getElementById('main')
        
        
              
        socket.on('connect', function(){
          //se conecta el :/server al socket
          console.log('Server Connected /server',socket.id)
          //solicito la cantidad de totems
          socket.emit('socket:totem_conectados');
          //guardo los datos del server
          socket.emit('socket:server',socket.id);
        });
        //recibo los totems conectados
        socket.on('server:totem_conectados', function(datos){
          console.log('server:totem_conectados',datos);
          
          for (const key in datos) {
      
            const element = datos[key];
            if(element.stream==true){
               data = {
                    "id":element.id,
                    "socket_id":element.socket_id,
                    "name":element.name,//nos indica que hizo una solicitud
                    "state":element.state,//nos indica que el totem funciona
                    "stream":element.stream
                }
              cargarVideo(data)
            }
          }
          crearStateTotem(datos)
        })
       
        //el cliente se desconecta del servidor
        socket.on('disconnect', function(){
            console.log('Disconnected from the server', socket.id)
        });
       
        //recibo si estan activos los totem
        socket.on('server:activity', function(datos){
          
          if(document.getElementById('connect')) document.getElementById('connect').remove();  
          for (const key in datos) {
            const element = datos[key];
            
            document.getElementById(`alert_${element.name}`).className ='';
            document.getElementById(`alert_${element.name}`).classList.add('widget');
            if(element.state == true){

              document.getElementById(`alert_${element.name}`).classList.add('alert_success_totem');

            }else{

              document.getElementById(`alert_${element.name}`).classList.add('alert_warning_totem');

            }
            
          
          }

          if(datos['stream']==true) cargarVideo(datos)
          
       
        });
        //recibo los videos
        socket.on('server:sos', function(data){
          console.log(data)
          cargarVideo(data)
         
        })
        /**
         * 
         *    ===========  @funciones
         * 
        */
        function cargarVideo(data){
          
          if(data.id!=socket.id){//aca revisamos que no sea //server

            var hoy = new Date()
            var fecha = hoy.getDate() + '-' + (hoy.getMonth()+1) + '-'+hoy.getFullYear();
            var hora =hoy.getHours()+':'+hoy.getMinutes()+':'+hoy.getSeconds();
            const {id,name,message} = data;

            //elimino la clase verde si existe
            if(document.getElementById("normal")){
                document.getElementById("normal").remove();
                document.body.style.backgroundColor = "#5cb85c";
            } 
            
            //creo el div div_warning_state
            if(!document.getElementById("warning-state")){
              document.body.style.backgroundColor = '#f0f4f5';
              let  div_warning_state = document.createElement('div')
              div_warning_state.className ='justify-content-center';
              div_warning_state.id = 'warning-state'
              main_div.appendChild(div_warning_state)
            }
            
            //tomo el div warning
            let div_warning_state = document.getElementById('warning-state');
            console.log(div_warning_state)
            //creo un div capa-video
            div_capa_video = document.createElement('div')
            //le agrego la clase
            div_capa_video.className ='capa-video';
            //lo cargo en el dom
            div_warning_state.appendChild(div_capa_video)
            //
            videos = `                  
              <div class="capa-video-footer" id="${name}">
                  <span><strong>${name}</strong></span>
                  <a href="#" onclick="solved('${name}')">Resuelto</a>
                  
                  <span>INICIADO: <strong>${fecha} ${hora}</strong></span>
              </div> 

              <video preload="" playsinline="" autoplay="" muted="" loop="">
                  <source src="./../sos1.mp4" type="video/mp4">
              </video>
              <audio src="./../sirena.mp3" autoplay></audio>`
              div_capa_video.innerHTML = videos;

          }

        }
 
        //creo los stados
        function crearStateTotem(data){
          
          for (const key in data) {
            const totem = data[key];
            verTotems = document.getElementById('state_totems')
            let class_alert_totem
            if(totem.state==true){
              class_alert_totem ='alert_success_totem'
            }else{
              class_alert_totem ='alert_warning_totem'
            }
            let app = document.createElement("div");
            verTotems.appendChild(app);  
            videos = `                  
              <div class="widget ${class_alert_totem}" id="alert_totem${totem.id}">
                <div class="imagen"><span ><i class="far fa-check-square"></i>${totem.name}</span></div>
              </div>`
            app.innerHTML = videos;
          }
            
        }

        function solved(totem_name){
          
          socket.emit('socket:solved',totem_name);
          setTimeout(() => {
            const totem = document.getElementById(totem_name)
            totem.parentElement.remove();

          }, 1000);
          
        }

   
        function startTime() {
          var today = new Date();
          var hr = today.getHours();
          var min = today.getMinutes();
          var sec = today.getSeconds();
          ap = (hr < 12) ? "<span>AM</span>" : "<span>PM</span>";
          hr = (hr == 0) ? 12 : hr;
          hr = (hr > 12) ? hr - 12 : hr;
          //Add a zero in front of numbers<10
          hr = checkTime(hr);
          min = checkTime(min);
          sec = checkTime(sec);
          
          var months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
          var days = ['Domingo', 'Lunes', 'Marzo', 'Miercoles', 'Jueves', 'Viernes', 'Sabado'];
          var curWeekDay = days[today.getDay()];
          var curDay = today.getDate();
          var curMonth = months[today.getMonth()];
          var curYear = today.getFullYear();
          var date = curWeekDay+", "+curDay+" "+curMonth+" "+curYear;
          // document.getElementById("date").innerHTML = date;
          
          document.getElementById("reloj").innerHTML = date + " " + hr + ":" + min + ":" + sec + " " + ap;
          var time = setTimeout(function(){ startTime() }, 500);
        }
        function checkTime(i) {
            if (i < 10) {
                i = "0" + i;
            }
            return i;
        }
     </script>
        
</body>
</html>